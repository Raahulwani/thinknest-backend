name: azure-deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: raahulwani/thinknest-app

jobs:
  build_and_push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tag
        id: meta
        run: echo "image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME || secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN || secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ steps.meta.outputs.image_tag }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest

  terraform_apply:
    name: Terraform init/plan/apply
    needs: build_and_push
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    env:
      TF_VAR_docker_image_name: ${{ env.DOCKER_IMAGE_NAME }}
      TF_VAR_docker_image_tag: ${{ needs.build_and_push.outputs.image_tag }}
      TF_VAR_postgres_password: ${{ secrets.TF_VAR_postgres_password || secrets.TF_VAR_POSTGRES_PASSWORD }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false -no-color

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve
